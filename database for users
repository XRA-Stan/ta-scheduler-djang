from django.contrib.auth.hashers import make_password, check_password
from django.db import models

class Role(models.Model):
    name = models.CharField(max_length=50, unique=True)  # The name of the role (Admin, Instructor, etc.)
    description = models.TextField(blank=True, null=True)

    def __str__(self):
        return self.name

class User(models.Model):
    username = models.CharField(max_length=30, unique=True)
    password = models.CharField(max_length=30)
    role = models.ForeignKey(Role, on_delete=models.SET_NULL, null=True)  # Linking the user to a role

    def __str__(self):
        return self.username


    def set_password(self, raw_password):
        self.password = make_password(raw_password)

    def check_password(self, raw_password):
        return check_password(raw_password, self.password)


    # Role-based access methods:
    def is_admin(self):
        return self.role and self.role.name == 'Admin'

    def is_instructor(self):
        return self.role and self.role.name == 'Instructor'

    def is_ta(self):
        return self.role and self.role.name == 'TA'
